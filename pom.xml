<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.reactome.release</groupId>
	<artifactId>chebi-update</artifactId>
	<version>1.1.4-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>${project.groupId}:${project.artifactId}</name>
	<description>
		Synchronization of gk_central Reference Molecule instances with ChEBI (https://www.ebi.ac.uk/chebi/)
	</description>
	<url>https://reactome.org</url>

	<organization>
		<name>Reactome</name>
		<url>https://reactome.org</url>
	</organization>

	<licenses>
		<license>
			<name>GNU AFFERO GENERAL PUBLIC LICENSE</name>
			<url>https://www.gnu.org/licenses/agpl-3.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Solomon Shorser</name>
			<email>solomon.shorser@oicr.on.ca</email>
			<organization>Ontario Institute for Cancer Research</organization>
			<organizationUrl>https://oicr.on.ca</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git://github.com/reactome/release-chebi-update.git</connection>
		<developerConnection>scm:git:ssh://github.com/reactome/release-chebi-update.git</developerConnection>
		<url>https://github.com/reactome/release-chebi-update</url>
		<tag>develop</tag>
	</scm>

	<!-- Configures the distribution to nexus repository -->
	<distributionManagement>
		<!-- Sonatype Release repo -->
		<repository>
			<id>ossrh</id>
			<name>Sonatype Release Repository</name>
			<url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2</url>
		</repository>

		<!-- Sonatype SNAPSHOT repo -->
		<snapshotRepository>
			<id>ossrh</id>
			<name>Sonatype Snapshot Repository</name>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<properties>
		<!-- dependencies -->
		<chebiws.client.version>2.4</chebiws.client.version>
		<mockito.version>2.18.3</mockito.version>
		<junit.version>4.12</junit.version>
		<powermock.version>2.0.0</powermock.version>
		<reactome.release.common.lib.version>1.2.0</reactome.release.common.lib.version>

		<!-- build -->
		<jdk.version>1.8</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- maven build and plugins -->
		<maven.assembly.version>3.2.0</maven.assembly.version>
		<maven.compiler.version>3.8.1</maven.compiler.version>
		<maven.gpg.version>1.5</maven.gpg.version>
		<maven.javadoc.version>2.10.3</maven.javadoc.version>
		<maven.release.version>2.5.3</maven.release.version>
		<maven.source.version>2.4</maven.source.version>
		<nexus-staging-maven-plugin>1.6.7</nexus-staging-maven-plugin>
		<maven.tidy.version>1.0-beta-1</maven.tidy.version>
	</properties>

	<dependencies>
		<!-- Main dependencies -->
		<dependency>
			<groupId>uk.ac.ebi.chebi.webapps.chebiWS.client</groupId>
			<artifactId>chebiWS-client</artifactId>
			<version>${chebiws.client.version}</version>
		</dependency>


		<dependency>
			<groupId>org.reactome.release</groupId>
			<artifactId>release-common-lib</artifactId>
			<version>${reactome.release.common.lib.version}</version>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito2</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<repositories>
		<!-- This repo is necessary for release-common-lib snapshots -->
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</repository>

		<!-- This repo is necessary for the chebiWS-client -->
		<repository>
			<id>nexus-ebi-repo</id>
			<name>The EBI internal repository</name>
			<url>https://www.ebi.ac.uk/Tools/maven/repos/content/groups/ebi-repo/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- sets the Java compiler version targeted by Maven -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>

			<!--
			allows 'mvn clean compile assembly:single' command to create a jar with dependencies

			execution section also allows 'mvn clean package' command to create two jars - with/without dependencies
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven.assembly.version}</version>
				<configuration>
					<archive>
						<manifestEntries>
							<Multi-Release>true</Multi-Release>
							<Main-Class>org.reactome.release.chebiupdate.Main</Main-Class>
						</manifestEntries>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!--
			allows 'mvn release' command to create a new release of the project
			https://maven.apache.org/maven-release/maven-release-plugin/
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven.release.version}</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<useReleaseProfile>false</useReleaseProfile>
					<releaseProfiles>release</releaseProfiles>
					<goals>deploy</goals>
					<tagNameFormat>v@{project.version}</tagNameFormat>
				</configuration>
			</plugin>

			<!-- Generate source jar file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Generate JavaDoc jar file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.version}</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Signs deployed jar, source jar, and JavaDoc jar with GPG -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>${maven.gpg.version}</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!-- Nexus staging plugin for Sonatype deployment -->
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>${nexus-staging-maven-plugin}</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>

			<!--
			checks the POM file has the order specified by the POM Code Convention
			http://maven.apache.org/developers/conventions/code.html#POM_Code_Convention
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tidy-maven-plugin</artifactId>
				<version>${maven.tidy.version}</version>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.1</version>
				<dependencies>
					<!-- This dependency allows Checkstyle to understand Java 11 syntax -->
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>8.44</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>checkstyle-check</id>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<configLocation>checkstyle.xml</configLocation>
					<!-- Optional: Set encoding -->
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
